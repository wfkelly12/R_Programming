mooc1 %>%  arrange(desc(revenue)) %>% head(n=25)
outliers <- mooc1 %>% filter(product_id == 17628)
View(outliers)
mooc1_clean <- mooc1 %>% filter(product_id != 17628)
View(mooc1_clean)
View(mooc1_clean)
View(mooc1_clean)
View(mooc1_clean)
summary(mooc1_clean$revenue)
library(tidyverse)
mooc1 <- read_rds('mooc1_etl4.rds')
mooc1_states <- read.csv('mooc1_states.csv', stringsAsFactors = FALSE)
library(tidyverse)
mooc1 <- read_rds('mooc1_etl4.rds')
mooc1_states <- read.csv('mooc1_states.csv', stringsAsFactors = FALSE)
View(mooc1)
View(mooc1)
View(mooc1_states)
str(mooc1_states)
str(mooc1_states)
summary(mooc1_states)
head(mooc1_states, n=10)
tail(mooc1_states, n=10)
?data type
mooc1_states$postal_code2 <- as.integer(mooc1_states$postal_code)
mooc1_states$postal_code2 <- as.numeric(mooc1_states$postal_code)
mooc1_states$postal_code2 <- as.integer(mooc1_states$postal_code)
summary(mooc1_states$postal_code)
summary(mooc1_states$postal_code2)
summary(mooc1$zip)
summary(mooc1_states$postal_code)
summary(mooc1_states$postal_code2)
summary(mooc1$zip)
mooc1_states$postal_code2 <- mooc1_states$postal_code %>% str_sub(1,5)
tail(mooc1_states, n=10)
mooc1_states$postal_code2 <- as.integer(mooc1_states$postal_code2)
summary(mooc1_states)
mooc1_states <- mooc1_states %>% rename(zip = postal_code2)
mooc1_states <- mooc1_states %>% select(-postal_code, -country_name)
mooc1_states <- mooc1_states %>% select(zip, state_province)
dim(mooc1)
mooc1_etl <- full_join(mooc1, mooc1_states, by='zip')
View(mooc1_etl)
View(mooc1_etl)
dim(mooc1_etl)
summary(mooc1_etl$unique_id)
mooc1_etl <- left_join(mooc1, mooc1_states, by='zip')
dim(mooc1_etl)
summary(mooc1_etl$unique_id)
write_rds(mooc1_etl, 'mooc1_etl_done.rds', compress = 'gz')
library(tidyverse)
df1 <- read_rds('mooc1_eda.rds')
str(df1)
summary(df1)
summary(df1)
str(df1)
summary(df1)
ggplot(df1, aes(x=revenue)) +
geom_histogram()
ggplot(df1, aes(x=revenue)) +
geom_histogram() +
coord_cartesian(xlim = c(-300, 300), ylim = c(0, 5000))
ggplot(df1, aes(x=revenue)) +
geom_histogram(binwidth = .25) +
coord_cartesian(xlim = c(-100, 100), ylim = c(0, 5000))
ggplot(df1, aes(x=revenue)) +
geom_histogram(binwidth = .25) +
coord_cartesian(xlim = c(-50, 50), ylim = c(0, 5000)) +
labs(title = 'Histogram of Revenue')
library(tidyverse)
df1 <- read_rds('mooc1_eda.rds')
ggplot(df1, aes(x=revenue, y=gp_margin)) +
geom_point() +
coord_cartesian(xlim=c(0, 30), ylim=c(-1,1)) +
labs(title='Scatter Plot of revenue & gross profit margin')
library(tidyverse)
df1 <- read_rds('mooc1_eda.rds')
ggplot(df1, aes(x=revenue, y=gp_margin)) +
geom_point() +
coord_cartesian(xlim=c(0, 30), ylim=c(-1,1)) +
labs(title='Scatter Plot of revenue & gross profit margin')
ggplot(df1, aes(x=factor(year), y=revenue)) +
geom_col() +
labs(title = 'Bar Plot-revenue by year')
ggplot(df1, aes(x=factor(year), y=revenue)) +
geom_boxplot() +
coord_cartesian(ylim=c(-10, 10)) +
labs(title = 'Box Plot-revenue by year')
ggplot(df1, aes(x=factor(year), y=revenue)) +
geom_boxplot() +
labs(title = 'Box Plot-revenue by year')
ggplot(df1, aes(x=factor(year), y=revenue)) +
geom_violin() +
labs(title = 'Violin Plot-revenue by year') +
coord_cartesian(ylim=c(-10,10)) +
stat_summary(fun=median, geom='point', size=2, color='red') +
stat_summary(fun=mean, geom="point", shape=23, size=2)
clear
cls
library(tidyverse)
df1 <- read_rds('mooc1_eda.rds')
month <- df1 %>% group_by(month) %>% summarize(sum_revenue = sum(revenue))
print(month)
ggplot(month, aes(x=month, y=sum_revenue)) +
geom_col()
ggplot(month, aes(x=month, y=sum_revenue)) +
geom_col(aes(fill=month)) +
scale_y_continuous(breaks=seq(0,700000,100000)) +
labs(title='Sum of Revenue by Month')
year_month <- df1 %>% group_by(year, month) %>% summarize(sum_revenue=sum(revenue))
print(year_month)
ggplot(year_month, aes(x=month, y=sum_revenue)) + geom_line(aes(group=year))
ggplot(year_month, aes(x=month, y=sum_revenue, color=factor(year))) +
geom_line(aes(group=factor(year)))
ggplot(year_month, aes(x=month, y=sum_revenue, color=factor(year))) +
geom_line(aes(group=factor(year))) +
geom_point()
library(tidyverse)
products <- read_rds('parent_dashboard.rds')
View(products)
View(products)
str(products)
summary(products)
products %>% filter(year==2019, month=='Aug', parent_name=='Cold Dispensed Beverage')
candy1 <- products %>% filter(parent_name=='Candy/Gum', year!=2017)
View(candy1)
ggplot(candy1, aes(x=month, y=tot_revenue, color=year)) +
geom_line(aes(group=year)) +
labs(title='Candy: revenue by year')
candy1 <- products %>% filter(parent_name=='Candy/Gum', year!=2017)
ggplot(candy1, aes(x=month, y=num_trans, color=year)) +
geom_line(aes(group=year)) +
labs(title='Candy: transactions')
ggplot(candy1, aes(x=month, y=tot_gp_margin, color=year)) +
geom_line(aes(group=year)) +
labs(title='Candy: gross profit margin')
candy2 <- products %>% filter(parent_name=='Candy/Gum', year==2019)
ggplot(candy2, aes(x=month, y=percent_chng_revenue)) +
geom_col(aes(fill=month))
ggplot(candy2, aes(x=month, y=percent_chng_gp_margin)) +
geom_col(aes(fill=month))
fuel <- products %>% filter(parent_name=='Fuel')
ggplot(fuel, aes(x=month, y=share_revenue, color=factor(year))) +
geom_line(aes(group=year)) +
coord_cartesian(ylim=c(0, 1))
ggplot(fuel, aes(x=month, y=share_grossprofit, color=factor(year))) +
geom_line(aes(group=year)) +
coord_cartesian(ylim=c(0, 1))
setwd("~/Documents/iMBA Classes/MBA 563/MOOC1 Tools for Exploratory Data Analysis in Business/Module 3/Module 3 Individual Assignment")
df <- read.csv("store_3HE.csv")
View(df)
str(df)
head(df)
slice_sample(df)
unique(df)
n_distinct(df)
str(df)
summary(df)
head(df)
tail(df)
slice_sample(df)
unique(df)
n_distinct(df)
summary(df)
head(df)
summary(df)
df$revenue <- as.numeric(df$revenue)
View(df)
df <- df %>% filter(size != NA)
df <- read.csv("store_3HE.csv")
df1 <- df %>% filter(size != "NA")
df <- read.csv("store_3HE.csv")
df$revenue <- as.numeric(df$revenue)
df <- df %>% filter(size != "NA")
summary(df)
df <- df %>% filter(size != "NA", Revenue != "NA")
df <- df %>% filter(size != "NA", revenue != "NA")
summary(df)
?average
df_average_revenue <- mean(df$revenue)
View(df)
df_low <- df %>% filter(df$revenue < df_mean_revenue)
df <- read.csv("store_3HE.csv")
df$revenue <- as.numeric(df$revenue)
df <- df %>% filter(size != "NA", revenue != "NA")
View(df)
df <- read.csv("store_3HE.csv")
df <- df %>% filter(size != "NA", revenue != "NA")
df$revenue <- as.numeric(df$revenue)
df <- df %>% filter(size != "NA", revenue != "NA")
df <- read.csv("store_3HE.csv")
df <- df %>% filter(size != "NA", revenue != "NA")
df$revenue <- as.numeric(df$revenue)
df <- df %>% filter(size != "NA", revenue != "NA")
df$df_mean_revenue <- mean(df$revenue)
View(df)
df_low <- df %>% filter(df$revenue < df$df_mean_revenue)
df_high <- df %>% filter(df$revenue > df$df_mean_revenue)
View(df_high)
df_low <- df %>% filter(df$revenue < df_mean_revenue)
df_high <- df %>% filter(df$revenue > df_mean_revenue)
df <- read.csv("store_3HE.csv")
df$revenue <- as.numeric(df$revenue)
df <- df %>% filter(size != "NA", revenue != "NA")
df_mean_revenue <- mean(df$revenue)
df_low <- df %>% filter(df$revenue < df_mean_revenue)
df_high <- df %>% filter(df$revenue > df_mean_revenue)
df_high <- df %>% filter(df$revenue >= df_mean_revenue)
ggplot(df_low,aes(x=revenue,y=size)) +
geom_line() +
labs(title='Revenue vs Size for df_low')
ggplot(df_high,aes(x=revenue,y=size)) +
geom_line() +
labs(title='Revenue vs Size for df_low')
ggplot(df_low,aes(x=revenue,y=size)) +
geom_line() +
labs(title='Revenue vs Size for df_low')
ggplot(df_high,aes(x=revenue,y=size)) +
geom_line() +
labs(title='Revenue vs Size for df_high')
cor(df$revenue,df$size)
ggplot(df,aes(x=revenue,y=size)) +
geom_line() +
labs(title='Revenue vs Size for df')
cor(df$revenue,df$size)
cor(df$revenue,df$size)
ggplot(df,aes(x=revenue,y=size)) +
geom_line() +
labs(title='Revenue vs Size for df')
cor(df_low$revenue,df_low$size)
cor(df_high$revenue,df_high$size)
ggplot(df, aes(x=region, y=revenue)) +
geom_boxplot() +
labs(title = 'Box Plot-revenue by region')
View(df)
cor(df$revenue,df$promo_units)
ggplot(df,aes(x=revenue,y=promo_units)) +
geom_line() +
labs(title='Revenue vs Promo_units for df')
cor(df$revenue,df$size)
ggplot(df,aes(x=revenue,y=size)) +
geom_line() +
labs(title='Line Plot-Revenue by Size df')
# Calculate mean of revenue from df
df_mean_revenue <- mean(df$revenue)
df_low <- df %>% filter(df$revenue < df_mean_revenue)
df_high <- df %>% filter(df$revenue >= df_mean_revenue)
# Line plots for df_low and df_high showing Revenue vs Size
ggplot(df_low,aes(x=revenue,y=size)) +
geom_line() +
labs(title='Line Plot-Revenue by Size df_low')
ggplot(df_high,aes(x=revenue,y=size)) +
geom_line() +
labs(title='Line Plot-Revenue by Size df_high')
ggplot(df, aes(x=region, y=revenue)) +
geom_boxplot() +
labs(title = 'Box Plot-Revenue by Region')
cor(df$revenue,df$promo_units)
ggplot(df,aes(x=revenue,y=promo_units)) +
geom_line() +
labs(title='Line Plot-Revenue by Promo_units df')
cor(df$revenue,df$promo_units)
ggplot(df,aes(x=revenue,y=promo_units)) +
geom_line() +
labs(title='Line Plot-Promo_units by Revenue df')
ggplot(df, aes(x=province, y=gross_profit)) +
geom_col() +
labs(title = 'Bar Plot-Gross Profit by Province')
str(df)
summary(df)
head(df)
tail(df)
slice_sample(df)
unique(df)
n_distinct(df)
View(df)
Product_Categories <- df[,c(12,13,14,15,16,17,18,19,20)]
head(Prod_Categories)
head(Product_Categories)
rquery.cormat(Product_Categories)
install.packages("corrplot")
library(corrplot)
library(corrplot)
rquery.cormat(Product_Categories)
cormat(Product_Categories)
?cormat
corplot(Product_Categories)
corrplot(Product_Categories)
corrplot(Product_Categories)
corrplot(as.matrix(Product_Categories))
head(Product_Categories)
corrplot(as.matrix(Product_Categories))
cor(Product_Categories)
corrplot(as.matrix(Prod_Cat_Corr))
Prod_Cat_Corr <- df %>% cor(Product_Categories)
install.packages("Hmisc")
library(Hmisc)
corrplot(as.matrix(Prod_Cat_Corr))
corrplot(as.matrix(Product_Categories))
cor(Product_Categories)
Prod_Cat.cor = cor(Product_Categories, method = c("spearman"))
corrplot(as.matrix(Prod_Cat.cor))
palette = colorRampPalette(c("green", "white", "red")) (20)
heatmap(x = Prod_Cat.cor, col = palette, symm = TRUE)
Prod_Cat.cor = cor(Product_Categories, method = c("spearman"))
corrplot(as.matrix(Prod_Cat.cor))
palette = colorRampPalette(c("green", "white", "red")) (20)
heatmap(x = Prod_Cat.cor, col = palette, symm = TRUE)
Prod_Cat.cor = cor(Product_Categories, method = c("spearman"))
corrplot(as.matrix(Prod_Cat.cor))
Prod_Cat.cor = cor(Product_Categories, method = c("spearman"))
corrplot(as.matrix(Prod_Cat.cor))
palette = colorRampPalette(c("green", "white", "red")) (20)
heatmap(x = Prod_Cat.cor, col = palette, symm = TRUE)
setwd("~/Documents/iMBA Classes/MBA 563/MOOC1 Tools for Exploratory Data Analysis in Business/Module 3/Module 3 Mini Assignment")
read.csv("AB_US_2020.csv")
df <- read.csv("AB_US_2020.csv")
View(df)
str(df)
summary(df)
library(tidyverse)
head(df)
tail(df)
summary(df)
library(lubridate)
df <- read.csv("Airbnb_US_Data.csv")
str(df)
df$last_review <- dmy(df$last_review)
df$year <- year(df$last_review)
df$month <- month(df$last_review)
View(df)
df$month <- month(df$last_review, label=TRUE)
summary(df)
df$neighbourhood <- is.numeric(df$neighbourhood)
df$neighbourhood <- is.integer(df$neighbourhood)
df$neighbourhood <- is.character(df$neighbourhood)
df <- read.csv("Airbnb_US_Data.csv")
df$neighbourhood <- as.numeric(df$neighbourhood)
df$last_review <- dmy(df$last_review)
df$year <- year(df$last_review)
df$month <- month(df$last_review, label=TRUE)
df <- df %>% select(-neighborhood_group)
df <- df %>% select(-neighbourhood_group)
View(df)
summary(df)
View(df)
df <- df %>% filter(df$last_review != "NA")
df <- df %>% filter(last_review != "NA")
df <- df %>% filter(reviews_per_month != "NA")
summary(df)
is.na(df$neighbourhood) <- 0
summary(df)
replace_na(df$neighbourhood, value = NULL)
replace_na(df$neighbourhood, value = 0)
df$neighbourhood <- df$neighbourhood %>% na.omit()
df$neighbourhood[is.na(df$neighbourhood)] <- 0
summary(df)
ggplot(df, aes(x=factor(year), y=price)) +
geom_col() +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=city, y=price)) +
geom_col() +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=city, y=price)) +
geom_col(group_by(city)) +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=room_type, y=price)) +
geom_col(group_by(city)) +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=city, y=price)) +
geom_col(group=city)) +
ggplot(df, aes(x=city, y=price)) +
geom_col(group=city) +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=city, y=price)) +
geom_col(group=year) +
labs(title = 'Bar Plot-revenue by year')
gplot(df, aes(x=city, y=price)) +
geom_col() +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=city, y=price)) +
geom_col() +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=city, y=price)) +
geom_col(group=city) +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=city, y=price)) +
geom_line(group=city) +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=month, y=price)) +
geom_col() +
labs(title = 'Bar Plot-revenue by year')
ggplot(df, aes(x=month, y=price)) +
geom_col(aes(fill=month)) +
labs(title = 'Bar Plot-price by month')
ggplot(df, aes(x=month, y=price, color=factor(year))) +
geom_col(aes(fill=month)) +
labs(title = 'Bar Plot-price by month')
ggplot(df, aes(x=month, y=price) +
geom_col(aes(fill=month)) +
labs(title = 'Bar Plot-price by month')
ggplot(df, aes(x=month, y=price)) +
ggplot(df, aes(x=month, y=price)) +
geom_col(aes(fill=month)) +
labs(title = 'Bar Plot-price by month')
ggplot(df, aes(x=month, y=price)) +
geom_col(aes(fill=month)) +
labs(title = 'Bar Plot-price by month')
ggplot(df, aes(x=factor(year), y=price)) +
geom_col(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year')
head(df)
ggplot(df, aes(x=room_type, y=price)) +
geom_col(aes(fill=room_type)) +
labs(title = 'Bar Plot-price by Room Type')
ggplot(df, aes(x=room_type, y=price)) +
geom_col(aes(fill=room_type)) +
labs(title = 'Bar Plot-price by Room Type') +
geom_text(aes(label=Number)
ggplot(df, aes(x=room_type, y=price)) +
ggplot(df, aes(x=room_type, y=price)) +
geom_col(aes(fill=room_type)) +
labs(title = 'Bar Plot-price by Room Type') +
geom_text(aes(label=Number))
linbrary(ggplot2)
library(ggplot2)
ggplot(df, aes(x=room_type, y=price)) +
geom_col(aes(fill=room_type)) +
labs(title = 'Bar Plot-price by Room Type') +
geom_text(aes(label=Number))
ggplot(df, aes(x=room_type, y=price)) +
geom_col(aes(fill=room_type)) +
labs(title = 'Bar Plot-price by Room Type') +
geom_text(aes(label=price), vjust=1.5, colour="white")
ggplot(df, aes(x=room_type, y=price)) +
geom_col(aes(fill=room_type)) +
labs(title = 'Bar Plot-price by Room Type') +
geom_text(aes(label=price), vjust=1.5, colour="white")
ggplot(df, aes(x=room_type, y=price)) +
geom_col(aes(fill=room_type)) +
labs(title = 'Bar Plot-price by Room Type') #+
#geom_text(aes(label=price), vjust=1.5, colour="white")
ggplot(df, aes(x=room_type, y=price)) +
geom_col(aes(fill=room_type)) +
labs(title = 'Bar Plot-price by Room Type') +
geom_text(aes(label=price), vjust = -0.2, colour="white")
ggplot(df, aes(x=room_type, y=price)) +
geom_col(aes(fill=room_type)) +
labs(title = 'Bar Plot-price by Room Type') +
geom_text(aes(label=price))
library(tidyverse)
library(lubridate)
library(ggplot2)
df <- read.csv("Airbnb_US_Data.csv")
str(df) # Rows: 226,030, Cols: 16
summary(df)
head(df)
tail(df)
df$last_review <- dmy(df$last_review)
df$year <- year(df$last_review)
df$month <- month(df$last_review, label=TRUE)
df$neighbourhood <- as.numeric(df$neighbourhood) #Update to Numeric
df <- df %>% select(-neighbourhood_group) #Remove neighbourhood_group col
df <- df %>% filter(reviews_per_month != "NA") #Removed NAs 48,602 [Now 177,428 rows]
df$neighbourhood[is.na(df$neighbourhood)] <- 0 #Replaced NAs with 0
ggplot(df, aes(x=month, y=price)) +
geom_col(aes(fill=month)) +
labs(title = 'Bar Plot-price by month')
ggplot(df, aes(x=factor(year), y=price)) +
geom_col(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(label=price))
ggplot(df, aes(x=factor(year), y=price)) +
geom_col(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(label=price))
ggplot(df, aes(x=factor(year), y=price)) +
geom_col(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(label=len), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(df, aes(x=factor(year), y=price)) +
geom_col(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(label=price, vjust=-0.3, size=3.5))+
theme_minimal()
ggplot(df, aes(x=factor(year), y=price)) +
geom_bar(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(label=price, vjust=-0.3, size=3.5))+
theme_minimal()
ggplot(data=df, aes(x=factor(year), y=price)) +
geom_bar(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(label=price, vjust=-0.3, size=3.5))+
theme_minimal()
ggplot(df, aes(x=factor(year), y=price)) +
geom_bar(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(label=price, vjust=-0.3, size=3.5)) #+
ggplot(df, aes(x=factor(year), y=price)) +
geom_col(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(label=price, vjust=-0.3, size=3.5)) #+
ggplot(df, aes(x=factor(year), y=price)) +
geom_col(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(x=year,y=price))
ggplot(df, aes(x=factor(year), y=price)) +
geom_col(aes(fill=factor(year))) +
labs(title = 'Bar Plot-price by year') +
geom_text(aes(x=year,y=price, label=price))
